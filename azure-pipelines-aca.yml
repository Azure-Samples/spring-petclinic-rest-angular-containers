trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'your-azure-subscription'
  resourceGroup: 'myResourceGroup'
  location: 'eastus'
  acrName: 'myAcrRegistry'
  containerAppEnv: 'myContainerAppEnv'
  angularImageName: 'spring-petclinic-angular'
  backendImageName: 'spring-backend'

stages:
- stage: Build
  jobs:
  - job: BuildAngular
    displayName: 'Build Angular Front-end'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'spring-petclinic-angular/pom.xml'
        goals: 'clean install -Pdocker'
  - job: BuildBackend
    displayName: 'Build Spring Boot Back-end'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'spring-petclinic-rest/pom.xml'
        goals: 'clean install -Pdocker'

- stage: PushToACR
  dependsOn: Build
  jobs:
  - job: PushAngular
    displayName: 'Push Angular Front-end to ACR'
    steps:
    - task: Docker@2
      inputs:
        command: 'login'
        containerRegistry: '$(acrName)'
    - script: |
        docker tag $(angularImageName):latest $(acrName).azurecr.io/$(angularImageName):latest
        docker push $(acrName).azurecr.io/$(angularImageName):latest
      displayName: 'Tag and Push Angular Image'
  - job: PushBackend
    displayName: 'Push Spring Boot Back-end to ACR'
    steps:
    - task: Docker@2
      inputs:
        command: 'login'
        containerRegistry: '$(acrName)'
    - script: |
        docker tag $(backendImageName):latest $(acrName).azurecr.io/$(backendImageName):latest
        docker push $(acrName).azurecr.io/$(backendImageName):latest
      displayName: 'Tag and Push Backend Image'

- stage: Deploy
  dependsOn: PushToACR
  jobs:
  - job: DeployToACA
    displayName: 'Deploy to Azure Container Apps'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: '$(azureSubscription)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az login
          az group create --name $(resourceGroup) --location $(location)
          az acr create --resource-group $(resourceGroup) --name $(acrName) --sku Basic
          az acr login --name $(acrName)
          az extension add --name containerapp --upgrade
          az containerapp env create --name $(containerAppEnv) --resource-group $(resourceGroup) --location $(location)
          az containerapp create --name spring-backend --resource-group $(resourceGroup) --environment $(containerAppEnv) --image $(acrName).azurecr.io/$(backendImageName):latest --target-port 8080 --ingress 'internal'
          az containerapp create --name angular-frontend --resource-group $(resourceGroup) --environment $(containerAppEnv) --image $(acrName).azurecr.io/$(angularImageName):latest --target-port 80 --ingress 'external' --env-vars REST_API_URL=http://spring-backend:8080/petclinic/api/
